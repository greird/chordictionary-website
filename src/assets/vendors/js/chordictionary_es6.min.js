const WORDING={croppedChordLayout:"Number of frets does not allow full display of the chord.",failedToConvertTabIntoNotes:"Could not convert the tab into notes.",failedToCalculateFormula:"Could not calculate the formulas.",invalidTab:'The tab should only be composed of "x" and numbers from 1 to 9.',invalidTuning:"The tuning doesn't seem right. It should only be composed of 1 or more letters from A to G.",invalidChordName:"The chord name doesn't seem right. A valid chord name could be Amin, C, Gsus4...",noMatch:"The tab didn't match any known chord."},MDL_A_SCALE=["A","A#","B","C","C#","D","D#","E","F","F#","G","G#"],MDL_CHORD_FORMULAS=[{formula:"1-3-5",integer:"0-4-7",name:"Major",suffix:""},{formula:"1-3-5#",integer:"0-4-8",name:"Augmented",suffix:"aug"},{formula:"1-b3-b5",integer:"0-3-6",name:"Diminished",suffix:"dim"},{formula:"1-b3-5",integer:"0-3-7",name:"Minor",suffix:"min"},{formula:"1-b3-5-9",integer:"0-2-3-7",name:"Minor, added ninth",suffix:"m(add9)"},{formula:"1-4-5",integer:"0-5-7",name:"Suspended fourth",suffix:"sus4"},{formula:"1-2-5",integer:"0-2-7",name:"Suspended second",suffix:"sus2"},{formula:"1-3-5-9",integer:"0-2-4-7",name:"Added ninth",suffix:"add9"},{formula:"1-3-b7",integer:"0-4-10",name:"Seventh",suffix:"7"},{formula:"1-3-5-b7",integer:"0-4-7-10",name:"Dominant seventh",suffix:"7"},{formula:"1-3-5-7",integer:"0-4-7-11",name:"Major seventh",suffix:"maj7"},{formula:"1-b3-5-7",integer:"0-3-7-11",name:"Minor, major seventh",suffix:"m(maj7)"},{formula:"1-b3-5-b7",integer:"0-3-7-10",name:"Minor seventh",suffix:"m7"},{formula:"1-b3-b5-b7",integer:"0-3-6-10",name:"Minor seventh, flat fifth",suffix:"m7b5"},{formula:"1-3-6",integer:"0-4-9",name:"Sixth",suffix:"6"},{formula:"1-b3-5-6",integer:"0-3-7-9",name:"Minor sixth",suffix:"m6"},{formula:"1-b3-5-b6",integer:"0-3-7-8",name:"Minor, flat sixth",suffix:"mb6"},{formula:"1-b3-5-6-9",integer:"0-2-3-7-9",name:"Minor sixth, added ninth",suffix:"m6/9"},{formula:"1-3-5-6",integer:"0-4-7-9",name:"Major Sixth",suffix:"maj6"},{formula:"1-3-5-6-9",integer:"0-2-4-7-9",name:"Sixth, added ninth",suffix:"6/9"},{formula:"1-3-5-7-9",integer:"0-2-4-7-11",name:"Major ninth",suffix:"maj9"},{formula:"1-b3-5-b7-9",integer:"0-2-3-7-10",name:"Minor ninth",suffix:"m9"},{formula:"1-b3-5-7-9",integer:"0-2-3-7-11",name:"Minor ninth, major seventh",suffix:"m9(maj7)"},{formula:"1-b3-b5-b7-9",integer:"0-2-3-6-10",name:"Minor eleventh",suffix:"m9b5"},{formula:"1-b3-5-b7-9-11-13",integer:"0-2-3-4-6-7-10",name:"Minor thirteen",suffix:"m13"},{formula:"1-3-5-7-#11",integer:"0-4-7-11-18",name:"Major seventh, sharp eleventh",suffix:"maj7#11"},{formula:"1-3-5-7-9-13",integer:"0-2-4-7-9-11",name:"Major thirteen",suffix:"maj13"},{formula:"1",integer:"0",name:"Single note",suffix:""},{formula:"1-5",integer:"0-7",name:"Power chord",suffix:"5"}];class Instrument{constructor(t,e,r,n){try{this.isValidTuning(t)&&(this.tuning=splitTuning(t)),this.fretNumber=e,this.fretsToDisplay=isNaN(r)?0:r+1,this.maxSpan=isNaN(n)?4:n}catch(t){return console.error(t),!1}return this}getChordInfo(t){let e,r,n=[],i=[],o=[],a={error:"",name:"",tab:t,notes:"",tuning:this.tuning.join(""),formula:""};try{this.isValidTab(t)&&(t=splitTab(t))}catch(t){return a.error=t,a}try{for(let i=0;i<t.length;i++)isNaN(t[i])?n.push("x"):(r=this.tuning[i],(e=parseInt(t[i])+MDL_A_SCALE.indexOf(r))>MDL_A_SCALE.length-1&&(e-=MDL_A_SCALE.length),n.push(MDL_A_SCALE[e]));a.notes=n.join("")}catch(t){return a.error=WORDING.failedToConvertTabIntoNotes,a}let s=[];try{for(let t=0;t<this.tuning.length;t++)if(s.push({root:"",formula:[]}),n[t]&&"x"!==n[t].toLowerCase())for(let e=0;e<n.length;e++){if(!n[e]||"x"===n[e].toLowerCase())continue;let r=MDL_A_SCALE.indexOf(n[e])-MDL_A_SCALE.indexOf(n[t]);r<0?r=MDL_A_SCALE.length+r:0===r&&(s[t].root=n[e]),s[t].formula.push(r)}}catch(t){a.error=WORDING.failedToCalculateFormula}for(let t=0;t<s.length;t++){if(""===s[t].root)continue;o.push(s[t].root),s[t].formula.sort(function(t,e){return t-e});let e=removeDuplicates(s[t].formula);i.push(e.join("-"))}let l,f,h=[],u=[];try{for(let t=0;t<MDL_CHORD_FORMULAS.length;t++){l=MDL_CHORD_FORMULAS[t].integer;for(let e=0;e<i.length;e++)f=new RegExp("^"+i[e]+"$","g"),l.match(f)&&o[e]&&(u.push(o[e]+MDL_CHORD_FORMULAS[t].suffix),h.push(MDL_CHORD_FORMULAS[t].formula))}if(!(h.length>0))throw WORDING.noMatch;if(h.length>1){let t=removeDuplicates(h);a.formula=t}else a.formula=h}catch(t){return a.error=t,a}if(u.length>1){let t=removeDuplicates(u);a.name=t}else a.name=u;return a}getChordsList(t,e,r){r=r||0;let n,i,o,a,s=[],l=[],f={error:"",chordList:[],offset:0};const h={basic:{rootBelow4thFret:!0,noMuteAfterFirstNote:!0,rootIsLowestNote:!0,splittedChord:!1,openString:!0},powerchord:{frettedNotes:[2,3],rootIsLowestNote:!0,rootOnLowestFret:!0,splittedChord:!1,openString:!1},bar:{rootIsLowestNote:!0,rootOnLowestFret:!0,barredString:[3,6],noMuteAfterFirstNote:!0,splittedChord:!1,openString:!1}};try{if("string"!=typeof t)throw WORDING.invalidChordName;o=(t=splitChordName(t))[0],n=t[1],s.push(o),a=MDL_A_SCALE.indexOf(o),l=(i=searchInObject(MDL_CHORD_FORMULAS,n)).integer.split("-")}catch(t){return f.error=WORDING.invalidChordName,f}for(let t=1;t<l.length;t++){let e=parseInt(l[t])+parseInt(a);e>MDL_A_SCALE.length-1&&(e-=MDL_A_SCALE.length),s.push(MDL_A_SCALE[e])}let u,m=[],g=0;for(g=0;g<this.tuning.length;g++){m[g]=[],m[g].push("x");for(let t=0;t<s.length;t++)(u=MDL_A_SCALE.indexOf(s[t])-MDL_A_SCALE.indexOf(this.tuning[g]))<0&&(u=MDL_A_SCALE.length+u),m[g].push(u),u+12<this.fretNumber&&m[g].push(u+12)}let d=[];for(g=0;g<this.tuning.length;g++){let t=d.length;for(let e=0;e<m[g].length;e++)if(d[e])for(let r=0;r<t;r++)if(0===e)d[r].push(m[g][e]);else{let t=d[r].slice(0);t.pop(),t.push(m[g][e]),d.push(t)}else d[e]=[m[g][e]]}let c=[],p=(t,e)=>{for(let r in t){if(!e.hasOwnProperty(r))return!1;if("object"==typeof t[r]){let n=t[r][0],i=t[r][1];if(e[r]<n||e[r]>i)return!1}else if(e[r]!==t[r])return!1}return!0};try{for(let t=r;t<d.length;t++){if(isValidChord(d[t],s,this.tuning)&&arrayFind(d[t],"max")-arrayFind(d[t],"min")<this.maxSpan){let e={openString:!1,frettedNotes:0},r=d[t].join(""),n=/[0-9]+[x]+/gi;/[0-9]+[x]+[0-9]+/gi.test(r)?e.splittedChord=!0:e.splittedChord=!1,n.test(r)?e.noMuteAfterFirstNote=!1:e.noMuteAfterFirstNote=!0;for(let r=0;r<d[t].length;r++){let n=d[t][r];if(!isNaN(n)){let i=n+MDL_A_SCALE.indexOf(this.tuning[r]);0===n&&(e.openString=!0),a===i&&(0===e.frettedNotes&&(e.rootIsLowestNote=!0),e.rootBelow4thFret=n<=4,e.rootOnLowestFret=arrayFind(d[t],"min")>=n),(n>0&&r<d[t].length-1&&n===d[t][r-1]||arrayFind(d[t],n)>=3)&&(e.barredString=isNaN(e.barredString)?1:e.barredString+1),e.frettedNotes++}}let i={tab:d[t],tag:[]};Object.getOwnPropertyNames(h).forEach((t,r)=>{p(h[t],e)&&i.tag.indexOf(t)&&i.tag.push(t)}),c.push(i)}if(e>0&&e<d[t].length&&c.length===e){r=t+1;break}}}catch(t){console.error(t)}return f.chordList=c,f.offset=r,f}getChordLayout(t,e){let r,n,i=this.fretsToDisplay;try{r=this.isValidTab(e)?splitTab(e):[0,0,0,0,0,0]}catch(t){return!1}let o=[];for(let t=0;t<r.length;t++)!1===isNaN(r[t])&&o.push(r[t]);let a=Math.abs(Math.max.apply(Math,o)),s=Math.abs(Math.min.apply(Math,o)),l=1;a>=i&&(l=s>0?s:1),1===l&&a>5&&(l=a-i+2);try{if(0===i)i=a-l+2;else if(a-l+1>i-1)throw i=a-l+2,WORDING.croppedChordLayout}catch(t){console.error(t)}n='<table class="chord">';for(let t=0;t<i;t++){let e=t+l-1;1===l&&0===t&&(n+="<thead>"),n+=e%2&&e>0?'<tr><th class="fret-number">'+e+"</th>":"<tr><th></th>";for(let e=0;e<this.tuning.length;e++){let i=parseInt(r[e]);n+=0===t?0===i?'<th><div class="dot open"></div></th>':"<th></th>":i===l+t-1?'<td><div class="dot plain">'+r[e]+"</div></td>":"<td></td>"}n+=1===l&&0===t?"<tr></thead>":"</tr>"}return n+='<caption align="bottom">'+t+"</caption>",n+="</table>"}isValidTab(t){if(new RegExp("^[x0-9]*$","i").test(t))return!0;throw WORDING.invalidTab}isValidTuning(t){if(new RegExp("^[#a-g]+$","i").test(t))return!0;throw WORDING.invalidTuning}}function isValidChord(t,e,r){let n,i,o={};for(let n=0;n<t.length;n++)if(!isNaN(t[n])){(i=t[n]+MDL_A_SCALE.indexOf(r[n]))>MDL_A_SCALE.length-1&&(i-=MDL_A_SCALE.length);for(let t=0;t<e.length;t++)o[MDL_A_SCALE[i]]?MDL_A_SCALE[i]===MDL_A_SCALE[t]&&o[MDL_A_SCALE[i]]++:o[MDL_A_SCALE[i]]=1}for(let t=0;t<e.length;t++){if(!(e[t]in o)){n=!1;break}n=!0}return n}function splitTab(t,e){e=e||"EADGBE";let r=[];if((t=t.toLowerCase()).length<=e.length)return t.split("");if(t.length===2*e.length){for(let e=0;e<t.length;e++)e%2||r.push(t.slice(e,e+2));return r}if(t.length>e.length){if(arrayFind(t.split(""),"max")>1){for(let e=0;e<t.length;e++)-1!==t.charAt(e).search(/[x02-9]/i)||1===t.charAt(e)&&-1!==t.charAt(e+1).search(/x/i)?r.push(t.slice(e,e+1)):-1===t.charAt(e+1).search(/x/i)&&(r.push(t.slice(e,e+2)),e++);return r}throw WORDING.invalidTab}return!1}function splitTuning(t){let e=[],r=new RegExp("^[a-g]+$","i"),n=new RegExp("^[#a-g]+$","i");if(r.test(t))return t.toUpperCase().split("");if(n.test(t)){t=t.toUpperCase();for(let r=0;r<t.length;r++)"#"!==t.charAt(r)&&("#"!==t.charAt(r+1)?e.push(t.slice(r,r+1)):(e.push(t.slice(r,r+2)),r++));return e}throw WORDING.invalidTuning}function splitChordName(t){let e,r;try{if("string"!=typeof t)throw WORDING.invalidChordName;return-1===t.search("#")?(e=t.charAt(0),r=t.slice(1)):(e=t.slice(0,2).toUpperCase(),r=t.slice(2)),[e,r]}catch(t){return!1}}function removeDuplicates(t){if(Array.isArray(t))return t.filter(function(t,e,r){return e===r.indexOf(t)});throw t+" is not an array."}function searchInObject(t,e){if("object"==typeof t){"string"==typeof e&&(e=e.toLowerCase());for(let r=0;r<t.length;r++)for(let n in t[r]){if(t[r][n]===e)return t[r];if("string"==typeof t[r][n]&&t[r][n].toLowerCase()===e)return t[r]}throw"Couldn't find "+e+" in "+t}throw t+" is not an object."}function arrayFind(t,e){let r=!1;if(!Array.isArray(t))throw t+" is not an array.";if(void 0===e)throw"Missing parameter.";switch(e){case"min":if(r=Math.min.apply(Math,t),!isNaN(r))return r;for(let e=0;e<t.length;e++)isNaN(t[e])||(isNaN(r)?r=t[e]:t[e]<r&&(r=t[e]));break;case"max":if(r=Math.max.apply(Math,t),!isNaN(r))return r;for(let e=0;e<t.length;e++)isNaN(t[e])||(isNaN(r)?r=t[e]:t[e]>r&&(r=t[e]));break;default:r=occurrences(t.join(""),e)}return r}function occurrences(t,e,r){if(t+="",(e+="").length<=0)return t.length+1;let n=0,i=0,o=r?1:e.length;for(;(i=t.indexOf(e,i))>=0;)++n,i+=o;return n}function countOccurences(t){if(Array.isArray(t)){let e={};for(i=0;i<t.length;++i)e[t[i]]||(e[t[i]]=0),++e[t[i]];return e}throw t+" is not an array."}export{Instrument};