"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}();/**Chordictionary v0.1.0-alpha.2, @license MIT, (c) 2016 Hubert Fauconnier + contributors*/
!function(e){function t(){function e(e,t,r){for(var n=void 0,i=void 0,o={},a=0;a<e.length;a++)if(!isNaN(e[a])){i=e[a]+u.indexOf(r[a]),i>u.length-1&&(i-=u.length);for(var f=0;f<t.length;f++)o[u[i]]?u[i]===u[f]&&o[u[i]]++:o[u[i]]=1}for(var s=0;s<t.length;s++){if(!(t[s]in o)){n=!1;break}n=!0}return n}function t(e,t){e=e.toLowerCase(),t=t||"EADGBE";var r=[];if(e.length<=t.length)return e.split("");if(e.length===2*t.length){for(var n=0;n<e.length;n++)n%2||r.push(e.slice(n,n+2));return r}if(e.length>t.length){if(a(e.split(""),"max")>1){for(var i=0;i<e.length;i++)-1!==e.charAt(i).search(/[x02-9]/i)||1===e.charAt(i)&&-1!==e.charAt(i+1).search(/x/i)?r.push(e.slice(i,i+1)):-1===e.charAt(i+1).search(/x/i)&&(r.push(e.slice(i,i+2)),i++);return r}throw s.invalidTab}return!1}function r(e){var t=[],r=new RegExp("^[a-g]+$","i"),n=new RegExp("^[#a-g]+$","i");if(r.test(e))return e.toUpperCase().split("");if(n.test(e)){e=e.toUpperCase();for(var i=0;i<e.length;i++)"#"!==e.charAt(i)&&("#"!==e.charAt(i+1)?t.push(e.slice(i,i+1)):(t.push(e.slice(i,i+2)),i++));return t}throw s.invalidTuning}function n(e){var t=void 0,r=void 0;try{if("string"!=typeof e)throw s.invalidChordName;var n=e.search("#");return-1===n?(t=e.charAt(0),r=e.slice(1)):(t=e.slice(0,2).toUpperCase(),r=e.slice(2)),[t,r]}catch(i){return!1}}function i(e){if(Array.isArray(e))return e.filter(function(e,t,r){return t===r.indexOf(e)});throw e+" is not an array."}function o(e,t){if("object"===("undefined"==typeof e?"undefined":_typeof(e))){"string"==typeof t&&(t=t.toLowerCase());for(var r=0;r<e.length;r++)for(var n in e[r]){if(e[r][n]===t)return e[r];if("string"==typeof e[r][n]&&e[r][n].toLowerCase()===t)return e[r]}throw"Couldn't find "+t+" in "+e}throw e+" is not an object."}function a(e,t){var r=!1;if(!Array.isArray(e))throw e+" is not an array.";if("undefined"==typeof t)throw"Missing parameter.";switch(t){case"min":if(r=Math.min.apply(Math,e),!isNaN(r))return r;for(var n=0;n<e.length;n++)isNaN(e[n])||(isNaN(r)?r=e[n]:e[n]<r&&(r=e[n]));break;case"max":if(r=Math.max.apply(Math,e),!isNaN(r))return r;for(var i=0;i<e.length;i++)isNaN(e[i])||(isNaN(r)?r=e[i]:e[i]>r&&(r=e[i]));break;default:r=f(e.join(""),t)}return r}function f(e,t,r){if(e+="",t+="",t.length<=0)return e.length+1;for(var n=0,i=0,o=r?1:t.length;;){if(i=e.indexOf(t,i),!(i>=0))break;++n,i+=o}return n}var s={croppedChordLayout:"Number of frets does not allow full display of the chord.",failedToConvertTabIntoNotes:"Could not convert the tab into notes.",failedToCalculateFormula:"Could not calculate the formulas.",invalidTab:'The tab should only be composed of "x" and numbers from 1 to 9.',invalidTuning:"The tuning doesn't seem right. It should only be composed of 1 or more letters from A to G.",invalidChordName:"The chord name doesn't seem right. A valid chord name could be Amin, C, Gsus4...",noMatch:"The tab didn't match any known chord."},u=["A","A#","B","C","C#","D","D#","E","F","F#","G","G#"],h=[{formula:"1-3-5",integer:"0-4-7",name:"Major",suffix:""},{formula:"1-3-5#",integer:"0-4-8",name:"Augmented",suffix:"aug"},{formula:"1-b3-b5",integer:"0-3-6",name:"Diminished",suffix:"dim"},{formula:"1-b3-5",integer:"0-3-7",name:"Minor",suffix:"min"},{formula:"1-b3-5-9",integer:"0-2-3-7",name:"Minor, added ninth",suffix:"m(add9)"},{formula:"1-4-5",integer:"0-5-7",name:"Suspended fourth",suffix:"sus4"},{formula:"1-2-5",integer:"0-2-7",name:"Suspended second",suffix:"sus2"},{formula:"1-3-5-9",integer:"0-2-4-7",name:"Added ninth",suffix:"add9"},{formula:"1-3-b7",integer:"0-4-10",name:"Seventh",suffix:"7"},{formula:"1-3-5-b7",integer:"0-4-7-10",name:"Dominant seventh",suffix:"7"},{formula:"1-3-5-7",integer:"0-4-7-11",name:"Major seventh",suffix:"maj7"},{formula:"1-b3-5-7",integer:"0-3-7-11",name:"Minor, major seventh",suffix:"m(maj7)"},{formula:"1-b3-5-b7",integer:"0-3-7-10",name:"Minor seventh",suffix:"m7"},{formula:"1-b3-b5-b7",integer:"0-3-6-10",name:"Minor seventh, flat fifth",suffix:"m7b5"},{formula:"1-3-6",integer:"0-4-9",name:"Sixth",suffix:"6"},{formula:"1-b3-5-6",integer:"0-3-7-9",name:"Minor sixth",suffix:"m6"},{formula:"1-b3-5-b6",integer:"0-3-7-8",name:"Minor, flat sixth",suffix:"mb6"},{formula:"1-b3-5-6-9",integer:"0-2-3-7-9",name:"Minor sixth, added ninth",suffix:"m6/9"},{formula:"1-3-5-6",integer:"0-4-7-9",name:"Major Sixth",suffix:"maj6"},{formula:"1-3-5-6-9",integer:"0-2-4-7-9",name:"Sixth, added ninth",suffix:"6/9"},{formula:"1-3-5-7-9",integer:"0-2-4-7-11",name:"Major ninth",suffix:"maj9"},{formula:"1-b3-5-b7-9",integer:"0-2-3-7-10",name:"Minor ninth",suffix:"m9"},{formula:"1-b3-5-7-9",integer:"0-2-3-7-11",name:"Minor ninth, major seventh",suffix:"m9(maj7)"},{formula:"1-b3-b5-b7-9",integer:"0-2-3-6-10",name:"Minor eleventh",suffix:"m9b5"},{formula:"1-b3-5-b7-9-11-13",integer:"0-2-3-4-6-7-10",name:"Minor thirteen",suffix:"m13"},{formula:"1-3-5-7-#11",integer:"0-4-7-11-18",name:"Major seventh, sharp eleventh",suffix:"maj7#11"},{formula:"1-3-5-7-9-13",integer:"0-2-4-7-9-11",name:"Major thirteen",suffix:"maj13"},{formula:"1",integer:"0",name:"Single note",suffix:""},{formula:"1-5",integer:"0-7",name:"Power chord",suffix:"5"}],l=function(){function f(e,t,n,i){_classCallCheck(this,f);try{this.isValidTuning(e)&&(this.tuning=r(e)),this.fretNumber=t,this.fretsToDisplay=isNaN(n)?0:n+1,this.maxSpan=isNaN(i)?4:i}catch(o){return console.error(o),!1}return this}return _createClass(f,[{key:"getChordInfo",value:function(e){var r=[],n=[],o=[],a={error:"",name:"",tab:e,notes:"",tuning:this.tuning.join(""),formula:""};try{this.isValidTab(e)&&(e=t(e))}catch(f){return a.error=f,a}var l=void 0,d=void 0;try{for(var m=0;m<e.length;m++)isNaN(e[m])?r.push("x"):(d=this.tuning[m],l=parseInt(e[m])+u.indexOf(d),l>u.length-1&&(l-=u.length),r.push(u[l]));a.notes=r.join("")}catch(f){return a.error=s.failedToConvertTabIntoNotes,a}var g=[];try{for(var c=0;c<this.tuning.length;c++)if(g.push({root:"",formula:[]}),r[c]&&"x"!==r[c].toLowerCase())for(var v=0;v<r.length;v++)if(r[v]&&"x"!==r[v].toLowerCase()){var p=u.indexOf(r[v])-u.indexOf(r[c]);0>p?p=u.length+p:0===p&&(g[c].root=r[v]),g[c].formula.push(p)}}catch(f){a.error=s.failedToCalculateFormula}for(var b=0;b<g.length;b++)if(""!==g[b].root){o.push(g[b].root),g[b].formula.sort(function(e,t){return e-t});var x=i(g[b].formula);n.push(x.join("-"))}var y=void 0,N=[],w=void 0,C=[];try{for(var M=0;M<h.length;M++){y=h[M].integer;for(var j=0;j<n.length;j++)w=new RegExp("^"+n[j]+"$","g"),y.match(w)&&o[j]&&(C.push(o[j]+h[M].suffix),N.push(h[M].formula))}if(!(N.length>0))throw s.noMatch;if(N.length>1){var T=i(N);a.formula=T}else a.formula=N}catch(f){return a.error=f,a}if(C.length>1){var A=i(C);a.name=A}else a.name=C;return a}},{key:"getChordsList",value:function(t,r,i){var f=this;i=i||0;var l=[],d=void 0,m=void 0,g=[],c=void 0,v=void 0,p={error:"",chordList:[],offset:0},b={basic:{rootBelow4thFret:!0,noMuteAfterFirstNote:!0,rootIsLowestNote:!0,splittedChord:!1,openString:!0},powerchord:{frettedNotes:[2,3],rootIsLowestNote:!0,rootOnLowestFret:!0,splittedChord:!1,openString:!1},bar:{rootIsLowestNote:!0,rootOnLowestFret:!0,barredString:[3,6],noMuteAfterFirstNote:!0,splittedChord:!1,openString:!1}};try{if("string"!=typeof t)throw s.invalidChordName;t=n(t),c=t[0],d=t[1],l.push(c),v=u.indexOf(c),m=o(h,d),g=m.integer.split("-")}catch(x){return p.error=s.invalidChordName,p}for(var y=1;y<g.length;y++){var N=parseInt(g[y])+parseInt(v);N>u.length-1&&(N-=u.length),l.push(u[N])}var w=[],C=void 0,M=0;for(M=0;M<this.tuning.length;M++){w[M]=[],w[M].push("x");for(var j=0;j<l.length;j++)C=u.indexOf(l[j])-u.indexOf(this.tuning[M]),0>C&&(C=u.length+C),w[M].push(C),C+12<this.fretNumber&&w[M].push(C+12)}var T=[];for(M=0;M<this.tuning.length;M++)for(var A=T.length,S=0;S<w[M].length;S++)if(T[S])for(var L=0;A>L;L++)if(0===S)T[L].push(w[M][S]);else{var O=T[L].slice(0);O.pop(),O.push(w[M][S]),T.push(O)}else T[S]=[w[M][S]];var k=[],F=function(e,t){for(var r in e){if(!t.hasOwnProperty(r))return!1;if("object"===_typeof(e[r])){var n=e[r][0],i=e[r][1];if(t[r]<n||t[r]>i)return!1}else if(t[r]!==e[r])return!1}return!0};try{for(var I=i;I<T.length;I++)if(e(T[I],l,this.tuning)&&a(T[I],"max")-a(T[I],"min")<this.maxSpan&&!function(){var e={openString:!1,frettedNotes:0},t=T[I].join(""),r=/[0-9]+[x]+[0-9]+/gi,n=/[0-9]+[x]+/gi;r.test(t)?e.splittedChord=!0:e.splittedChord=!1,n.test(t)?e.noMuteAfterFirstNote=!1:e.noMuteAfterFirstNote=!0;for(var i=0;i<T[I].length;i++){var o=T[I][i];if(!isNaN(o)){var s=o+u.indexOf(f.tuning[i]);0===o&&(e.openString=!0),v===s&&(0===e.frettedNotes&&(e.rootIsLowestNote=!0),e.rootBelow4thFret=4>=o?!0:!1,e.rootOnLowestFret=a(T[I],"min")>=o?!0:!1),(o>0&&i<T[I].length-1&&o===T[I][i-1]||a(T[I],o)>=3)&&(e.barredString=isNaN(e.barredString)?1:e.barredString+1),e.frettedNotes++}}var h={tab:T[I],tag:[]};Object.getOwnPropertyNames(b).forEach(function(t,r){F(b[t],e)&&h.tag.indexOf(t)&&h.tag.push(t)}),k.push(h)}(),r>0&&r<T[I].length&&k.length===r){i=I+1;break}}catch(x){console.error(x)}return p.chordList=k,p.offset=i,p}},{key:"getChordLayout",value:function(e,r){var n=void 0,i=void 0,o=this.fretsToDisplay;try{n=this.isValidTab(r)?t(r):[0,0,0,0,0,0]}catch(a){return!1}for(var f=[],u=0;u<n.length;u++)isNaN(n[u])===!1&&f.push(n[u]);var h=Math.abs(Math.max.apply(Math,f)),l=Math.abs(Math.min.apply(Math,f)),d=1;h>=o&&(d=l>0?l:1),1===d&&h>5&&(d=h-o+2);try{if(0===o)o=h-d+2;else if(h-d+1>o-1)throw o=h-d+2,s.croppedChordLayout}catch(a){console.error(a)}i='<table class="chord">';for(var m=0;o>m;m++){var g=m+d-1;1===d&&0===m&&(i+="<thead>"),i+=g%2&&g>0?'<tr><th class="fret-number">'+g+"</th>":"<tr><th></th>";for(var c=0;c<this.tuning.length;c++){var v=parseInt(n[c]);i+=0===m?0===v?'<th><div class="dot open"></div></th>':"<th></th>":v===d+m-1?'<td><div class="dot plain">'+n[c]+"</div></td>":"<td></td>"}i+=1===d&&0===m?"<tr></thead>":"</tr>"}return i+='<caption align="bottom">'+e+"</caption>",i+="</table>"}},{key:"isValidTab",value:function(e){var t=new RegExp("^[x0-9]*$","i");if(t.test(e))return!0;throw s.invalidTab}},{key:"isValidTuning",value:function(e){var t=new RegExp("^[#a-g]+$","i");if(t.test(e))return!0;throw s.invalidTuning}}]),f}();return l}"undefined"==typeof Chordictionary?e.Chordictionary=t():console.error("Chordictionary is already defined.")}(window);